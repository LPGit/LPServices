using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using LPCloudAPI.Models;

namespace LPCloudAPI.Controllers
{
    [Route("api/[controller]")]
    public class TextItemController : Controller
    {
        private readonly TextItemContext _context;

        public TextItemController(TextItemContext context)
        {
            _context = context;

            if (_context.TextItems.Count() == 0)
            {
                _context.TextItems.Add(new TextItem { Text = "AutoGeneratedItem01" });
                _context.SaveChanges();
            }
        }

        [HttpGet]
        public IEnumerable<TextItem> GetAll()
        {
            return _context.TextItems.ToList();
        }

        [HttpGet("{id}", Name = "GetTextItem")]
        public IActionResult GetById(long id)
        {
            var item = _context.TextItems.FirstOrDefault(t => t.Id == id);
            if (item == null)
            {
                return NotFound();
            }
            return new ObjectResult(item);
        }

        [HttpPost]
        public IActionResult Create([FromBody] TextItem item)
        {
            if (item == null)
                return BadRequest();

            this._context.Add(item);

            this._context.SaveChanges();

            return this.CreatedAtRoute("GetTextItem", new { Id = item.Id }, item);
        }

        [HttpPut("{id}")]
        public IActionResult Update(long id, [FromBody] TextItem item)
        {
            if (item == null || item.Id != id)
            {
                return BadRequest();
            }

            var textItem = _context.TextItems.FirstOrDefault(t => t.Id == id);
            if (textItem == null)
            {
                return NotFound();
            }

            textItem.Text = item.Text;

            _context.TextItems.Update(textItem);
            _context.SaveChanges();
            return new NoContentResult();
        }

        [HttpDelete("{id}")]
        public IActionResult Delete(long id)
        {
            var textItem = _context.TextItems.First(t => t.Id == id);
            if (textItem == null)
            {
                return NotFound();
            }

            _context.TextItems.Remove(textItem);
            _context.SaveChanges();
            return new NoContentResult();
        }
    }
}
